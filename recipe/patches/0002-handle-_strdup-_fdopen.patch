From d601bd57b2ea8798afcdc5483589c7a3897983a9 Mon Sep 17 00:00:00 2001
From: "Uwe L. Korn" <uwe.korn@quantco.com>
Date: Tue, 19 Sep 2023 15:25:24 +0200
Subject: [PATCH 2/2] handle _strdup & _fdopen

---
 scipy/_lib/_ccallback_c.pyx  | 7 +++++--
 scipy/_lib/messagestream.pyx | 6 +++++-
 2 files changed, 10 insertions(+), 3 deletions(-)

diff --git a/scipy/_lib/_ccallback_c.pyx b/scipy/_lib/_ccallback_c.pyx
index 755602bc7..8566eec51 100644
--- a/scipy/_lib/_ccallback_c.pyx
+++ b/scipy/_lib/_ccallback_c.pyx
@@ -4,12 +4,15 @@ from cpython.pycapsule cimport (
 )
 from cpython.long cimport PyLong_AsVoidPtr
 from libc.stdlib cimport free
-from libc.string cimport strdup
+# from libc.string cimport strdup
 
 from .ccallback cimport (ccallback_t, ccallback_prepare, ccallback_release, CCALLBACK_DEFAULTS,
                          ccallback_signature_t)
 
 
+cdef extern from "string.h":
+    char *_strdup(const char *strSource)
+
 #
 # PyCapsule helpers
 #
@@ -75,7 +78,7 @@ def get_raw_capsule(func_obj, name_obj, context_obj):
     if name == NULL:
         name_copy = name
     else:
-        name_copy = strdup(name)
+        name_copy = _strdup(name)
 
     capsule = PyCapsule_New(func, name_copy, &raw_capsule_destructor)
     if context != NULL:
diff --git a/scipy/_lib/messagestream.pyx b/scipy/_lib/messagestream.pyx
index 318b6165f..71d4d46b2 100644
--- a/scipy/_lib/messagestream.pyx
+++ b/scipy/_lib/messagestream.pyx
@@ -1,10 +1,14 @@
 cimport cython
 from libc cimport stdio, stdlib
+from libc.stdio cimport FILE
 from cpython cimport PyBytes_FromStringAndSize
 
 import os
 import tempfile
 
+cdef extern from "stdio.h":
+    FILE *_fdopen   (const char *filename, const char  *opentype)
+
 cdef extern from "messagestream.h":
     stdio.FILE *messagestream_open_memstream(char **, size_t *)
 
@@ -35,7 +39,7 @@ cdef class MessageStream:
         except PermissionError:
             self._removed = 0
 
-        self.handle = stdio.fdopen(fd, 'wb+')
+        self.handle = _fdopen(fd, 'wb+')
         if self.handle == NULL:
             os.close(fd)
             if not self._removed:
