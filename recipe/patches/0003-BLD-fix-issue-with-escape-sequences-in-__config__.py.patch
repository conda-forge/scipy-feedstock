From 3ba05df1f6e2065feaf051b2b8ef55e25f70a0f9 Mon Sep 17 00:00:00 2001
From: Ralf Gommers <ralf.gommers@gmail.com>
Date: Mon, 22 Jan 2024 23:30:40 +0100
Subject: [PATCH 3/3] BLD: fix issue with escape sequences in `__config__.py`

Reported in https://github.com/conda-forge/scipy-feedstock/issues/264:
linker args contained a `\s` on Windows as part of a path in a linker
flag.

This is basically the same bug as gh-17936, it was fixed for paths
in `__config__.py` but not for things like linker flags which usually
don't contain a path but may do so.

Now turn everything except name/version/found/id, which really should
not contain escapes, into raw strings.

[skip circle] [skip cirrus]
---
 scipy/__config__.py.in | 58 +++++++++++++++++++++---------------------
 1 file changed, 29 insertions(+), 29 deletions(-)

diff --git a/scipy/__config__.py.in b/scipy/__config__.py.in
index fdfd9e64ab..7be746a25b 100644
--- a/scipy/__config__.py.in
+++ b/scipy/__config__.py.in
@@ -27,53 +27,53 @@ CONFIG = _cleanup(
         "Compilers": {
             "c": {
                 "name": "@C_COMP@",
-                "linker": "@C_COMP_LINKER_ID@",
+                "linker": r"@C_COMP_LINKER_ID@",
                 "version": "@C_COMP_VERSION@",
-                "commands": "@C_COMP_CMD_ARRAY@",
-                "args": "@C_COMP_ARGS@",
-                "linker args": "@C_COMP_LINK_ARGS@",
+                "commands": r"@C_COMP_CMD_ARRAY@",
+                "args": r"@C_COMP_ARGS@",
+                "linker args": r"@C_COMP_LINK_ARGS@",
             },
             "cython": {
-                "name": "@CYTHON_COMP@",
-                "linker": "@CYTHON_COMP_LINKER_ID@",
-                "version": "@CYTHON_COMP_VERSION@",
-                "commands": "@CYTHON_COMP_CMD_ARRAY@",
-                "args": "@CYTHON_COMP_ARGS@",
-                "linker args": "@CYTHON_COMP_LINK_ARGS@",
+                "name": r"@CYTHON_COMP@",
+                "linker": r"@CYTHON_COMP_LINKER_ID@",
+                "version": r"@CYTHON_COMP_VERSION@",
+                "commands": r"@CYTHON_COMP_CMD_ARRAY@",
+                "args": r"@CYTHON_COMP_ARGS@",
+                "linker args": r"@CYTHON_COMP_LINK_ARGS@",
             },
             "c++": {
                 "name": "@CPP_COMP@",
-                "linker": "@CPP_COMP_LINKER_ID@",
+                "linker": r"@CPP_COMP_LINKER_ID@",
                 "version": "@CPP_COMP_VERSION@",
-                "commands": "@CPP_COMP_CMD_ARRAY@",
-                "args": "@CPP_COMP_ARGS@",
-                "linker args": "@CPP_COMP_LINK_ARGS@",
+                "commands": r"@CPP_COMP_CMD_ARRAY@",
+                "args": r"@CPP_COMP_ARGS@",
+                "linker args": r"@CPP_COMP_LINK_ARGS@",
             },
             "fortran": {
                 "name": "@FORTRAN_COMP@",
-                "linker": "@FORTRAN_COMP_LINKER_ID@",
+                "linker": r"@FORTRAN_COMP_LINKER_ID@",
                 "version": "@FORTRAN_COMP_VERSION@",
-                "commands": "@FORTRAN_COMP_CMD_ARRAY@",
-                "args": "@FORTRAN_COMP_ARGS@",
-                "linker args": "@FORTRAN_COMP_LINK_ARGS@",
+                "commands": r"@FORTRAN_COMP_CMD_ARRAY@",
+                "args": r"@FORTRAN_COMP_ARGS@",
+                "linker args": r"@FORTRAN_COMP_LINK_ARGS@",
             },
             "pythran": {
-                "version": "@PYTHRAN_VERSION@",
+                "version": r"@PYTHRAN_VERSION@",
                 "include directory": r"@PYTHRAN_INCDIR@"
             },
         },
         "Machine Information": {
             "host": {
-                "cpu": "@HOST_CPU@",
-                "family": "@HOST_CPU_FAMILY@",
-                "endian": "@HOST_CPU_ENDIAN@",
-                "system": "@HOST_CPU_SYSTEM@",
+                "cpu": r"@HOST_CPU@",
+                "family": r"@HOST_CPU_FAMILY@",
+                "endian": r"@HOST_CPU_ENDIAN@",
+                "system": r"@HOST_CPU_SYSTEM@",
             },
             "build": {
-                "cpu": "@BUILD_CPU@",
-                "family": "@BUILD_CPU_FAMILY@",
-                "endian": "@BUILD_CPU_ENDIAN@",
-                "system": "@BUILD_CPU_SYSTEM@",
+                "cpu": r"@BUILD_CPU@",
+                "family": r"@BUILD_CPU_FAMILY@",
+                "endian": r"@BUILD_CPU_ENDIAN@",
+                "system": r"@BUILD_CPU_SYSTEM@",
             },
             "cross-compiled": bool("@CROSS_COMPILED@".lower().replace('false', '')),
         },
@@ -85,7 +85,7 @@ CONFIG = _cleanup(
                 "detection method": "@BLAS_TYPE_NAME@",
                 "include directory": r"@BLAS_INCLUDEDIR@",
                 "lib directory": r"@BLAS_LIBDIR@",
-                "openblas configuration": "@BLAS_OPENBLAS_CONFIG@",
+                "openblas configuration": r"@BLAS_OPENBLAS_CONFIG@",
                 "pc file directory": r"@BLAS_PCFILEDIR@",
             },
             "lapack": {
@@ -95,7 +95,7 @@ CONFIG = _cleanup(
                 "detection method": "@LAPACK_TYPE_NAME@",
                 "include directory": r"@LAPACK_INCLUDEDIR@",
                 "lib directory": r"@LAPACK_LIBDIR@",
-                "openblas configuration": "@LAPACK_OPENBLAS_CONFIG@",
+                "openblas configuration": r"@LAPACK_OPENBLAS_CONFIG@",
                 "pc file directory": r"@LAPACK_PCFILEDIR@",
             },
             "pybind11": {
