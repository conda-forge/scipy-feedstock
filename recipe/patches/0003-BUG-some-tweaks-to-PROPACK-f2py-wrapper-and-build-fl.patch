From c1ed688ccb326fe8b95a33d55f8c4a3851343236 Mon Sep 17 00:00:00 2001
From: Ralf Gommers <ralf.gommers@gmail.com>
Date: Sat, 8 Apr 2023 20:11:36 +0100
Subject: [PATCH 3/9] BUG: some tweaks to PROPACK f2py wrapper and build flags

Still far from fixed, but it should be closer - and prepares
for removal of `setup.py` and re-introduction of Accelerate.
---
 scipy/meson.build                         |  4 +++-
 scipy/sparse/linalg/_propack/meson.build  | 13 ++++++++++---
 scipy/sparse/linalg/_propack/zpropack.pyf |  2 +-
 3 files changed, 14 insertions(+), 5 deletions(-)

diff --git a/scipy/meson.build b/scipy/meson.build
index 32f909e47..6de5aea26 100644
--- a/scipy/meson.build
+++ b/scipy/meson.build
@@ -199,7 +199,9 @@ dependency_map = {
 #        requesting `mkl-dynamic-lp64-seq` here. And then there's work needed
 #        in general to enable the ILP64 interface (also for OpenBLAS).
 uses_mkl = blas.name().to_lower().startswith('mkl') or lapack.name().to_lower().startswith('mkl')
-if uses_mkl or get_option('use-g77-abi')
+uses_accelerate = blas.name().to_lower().startswith('accelerate') or lapack.name().to_lower().startswith('accelerate')
+use_g77_abi = uses_mkl or uses_accelerate or get_option('use-g77-abi')
+if use_g77_abi
   g77_abi_wrappers = files([
     '_build_utils/src/wrap_g77_abi_f.f',
     '_build_utils/src/wrap_g77_abi_c.c'
diff --git a/scipy/sparse/linalg/_propack/meson.build b/scipy/sparse/linalg/_propack/meson.build
index fb8d99c66..70e098241 100644
--- a/scipy/sparse/linalg/_propack/meson.build
+++ b/scipy/sparse/linalg/_propack/meson.build
@@ -85,12 +85,19 @@ elements = [
   ['_zpropack', z_src, 'zpropack.pyf']
 ]
 
+cargs_propack = ['-D_OPENMP']  # FIXME: _OPENMP is needed now, but not good!
+if use_g77_abi
+  # This define needs to be removed from PROPACK code, in favor of using
+  # `wcdotc` unconditionally, like is done in ARPACK.
+  cargs_propack += ['-DSCIPY_USE_G77_CDOTC_WRAP=1']
+endif
 foreach ele: elements
-  # FIXME: this doesn't match `setup.py` for g77 ABI issue. That is pretty much
-  # broken anyway, see for example gh-15108.
+  # PROPACK integration is pretty much broken, see for example gh-15108.
+  # Note that in setup.py, adding `g77_abi_wrappers` is skipped for 32-bit
+  # architectures (stated reason: "it blows up").
   propack_lib = static_library('lib_' + ele[0],
     [ele[1], g77_abi_wrappers],
-    c_args: ['-D_OPENMP'],  # FIXME: this is needed now, but not good!
+    c_args: cargs_propack,
     fortran_args: [
       fortran_ignore_warnings, 
       _fflag_Wno_intrinsic_shadow,
diff --git a/scipy/sparse/linalg/_propack/zpropack.pyf b/scipy/sparse/linalg/_propack/zpropack.pyf
index 929098b3e..81f418099 100644
--- a/scipy/sparse/linalg/_propack/zpropack.pyf
+++ b/scipy/sparse/linalg/_propack/zpropack.pyf
@@ -10,7 +10,7 @@ python module __user__routines
            complex*16 intent(in,out),dimension((transa[0] == 'n' ? m : n)) :: y
            integer dimension(*) :: iparm
            complex*16 dimension(*) :: zparm
-        end function caprod
+        end function zaprod
     end interface
 end python module __user__routines
 
